# === systemd-nspawn defaults ==================================================
# Default networks that will be applied ONLY to nspwan deployments.
nspawn_networks:
  default_network:
    type: veth
    address: dhcp

# This is a list of items that will be passed into the container as READ-ONLY
# files or directories. If any of these items are passed into the container
# the container create process will ensure the file is not present within the
# container prior to writting the config.
#  nspawn_read_only_host_bindmount:
#    - { source: /etc/resolv.conf, dest: /etc/resolv.conf }
nspawn_read_only_host_bindmount: "{{ _nspawn_read_only_host_bindmount | default([]) }}"

# This is a list of items that will be passed into the container as a shared
# bind mount. If any of these items are passed into the container.
#  nspawn_shared_host_bindmount:
#    - /etc/apt
nspawn_shared_host_bindmount:
  - /etc/localtime

# Defined CPU architecture map
nspawn_architecture_mapping:
  x86_64: amd64
  ppc64le: ppc64el
  s390x: s390x
  armv7l: armhf

# Set the cache map used when creating the container.
#  nspawn_map:
#    distro: "$DISTRO_NAME"
#    arch: "{{ nspawn_architecture_mapping[container_architecture] }}"
#    release: "{{ hostvars[physical_host]['ansible_distribution_version'] }}"
nspawn_map: "{{ _nspawn_map | default({}) }}"

# Enable or Disable the use of systemd-resolved. Option is Boolean.
nspawn_container_enable_resolved: "{{ _nspawn_container_enable_resolved | default(true) }}"

# Enable or Disable config preservation. If this is disabled a new configuration
# file for the systemd container will be created, even if the container already
# exists. When this is set to "false" the container will be restarted should the
# configuration task(s) result in change.
nspawn_container_preserve_config: true

# === General container defaults ===============================================
# NOTE(cloudnull): These are host specific variables we capture up-front. These
#                  psuedo variables are used to capture the container host
#                  information but could be overridden to deploy whatever.
container_host: "{{ hostvars[inventory_hostname]['physical_host'] | default('localhost') }}"
container_architecture: "{{ hostvars[container_host]['ansible_architecture'] | lower }}"

# Name of the on-disk image to use for deployment.
container_image: "{{ nspawn_map['distro'] }}-{{ nspawn_map['release'] }}-{{ nspawn_map['arch'] }}"

# The domain the containers will exist within.
container_domain: "local"

# Container Default bind mounts. This option will be merged with the container
# bind mounts. This option takes a list of files with `mount_path` defining the
# path on the host and `bind_dir_path` which defines the intra-container path
# and is relative, it assumes that it starts with a "/".
container_default_bind_mounts: []

# Container bind mounts. This option takes a list of files on a host that will
# be mounted at the exact same path within the container. This option takes a
# list of files with `mount_path` defining the path on the host and
# `bind_dir_path` which defines the intra-container path which is a relative
# and starts at "/".
container_bind_mounts: []

